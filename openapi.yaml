openapi: 3.0.3
info:
  title: POS
  description:
    POS's api documentation
  contact:
    email: ha.nt@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
    version: 1.0.11
tags:
  - name: Authentication
    description: Everything about authentication
  - name: Suppliers
    description: Everything about suppliers
  - name: Categories
    description: Everything about product's categories
  - name: Products
    description: Everything about products
paths:
  /register:
    post:
      tags:
        - Authentication
      description: Register an account
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: username
                password:
                  type: string
                  description: password
                email:
                  type: string
                  description: email of user, required email or phoneNumber
                phoneNumber:
                  type: string
                  description: phoneNumber of user, required email or phoneNumber
              required:
                - username
                - password
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    description: response code
                  message:
                    type: string
                    description: message from server
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: authentication token

  /login:
    post:
      tags:
        - Authentication
      description: Login
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: username
                password:
                  type: string
                  description: password
              required:
                - username
                - password
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    description: response code
                  message:
                    type: string
                    description: message from server
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                        description: authentication token

  /suppliers:
    post:
      tags:
        - Suppliers
      description: Create or update a supplier
      operationId: upsertSupplier
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Supplier"
              required:
                - name
                - phoneNumber
                - email
                - address
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    description: response code
                  message:
                    type: string
                    description: message from server
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int32
                        description: id of supplier

  /suppliers/get:
    post:
      tags:
        - Suppliers
      description: Get information about suppliers
      operationId: getSuppliers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: number
                  description: list of supplier ids
                name:
                  type: string
                  description: name of supplier
                page:
                  type: number
                  description: page number for pagination
                pageSize:
                  type: number
                  description: number of items per page
              required:
                - page
                - pageSize
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    description: response code
                  message:
                    type: string
                    description: message from server
                  data:
                    type: object
                    properties:
                      suppliers:
                        type: array
                        items:
                          $ref: "#/components/schemas/Supplier"
                      page:
                        type: number
                        description: page number for pagination
                      pageSize:
                        type: number
                        description: number of items per page

  /suppliers/{supplierId}:
    delete:
      tags:
        - Suppliers
      description: Soft delete a supplier
      operationId: deleteSupplier
      parameters:
        - name: supplierId
          in: path
          description: supplierId to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    description: response code
                  message:
                    type: string
                    description: message from server

  /categories:
    post:
      tags:
        - Categories
      description: Create or update a category
      operationId: upsertCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Category"
              required:
                - name
                - description
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    description: response code
                  message:
                    type: string
                    description: message from server
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int32
                        description: id of supplier

  /categories/get:
    post:
      tags:
        - Categories
      description: Soft delete a category
      operationId: deleteCategory
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: integer
                    format: int32
                  description: list of category ids
                name:
                  type: string
                  description: name of category
                page:
                  type: number
                  description: page number for pagination
                pageSize:
                  type: number
                  description: number of items per page
              required:
                - page
                - pageSize
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    description: response code
                  message:
                    type: string
                    description: message from server
                  data:
                    type: object
                    properties:
                      categories:
                        type: array
                        items:
                          $ref: "#/components/schemas/Category"
                      page:
                        type: number
                        description: page number for pagination
                      pageSize:
                        type: number
                        description: number of items per page

  /categories/{categoryId}:
    delete:
      tags:
        - Categories
      description: Soft delete a category
      operationId: deleteCategory
      parameters:
        - name: categoryId
          in: path
          description: categoryId to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    description: response code
                  message:
                    type: string
                    description: message from server

  /products:
    post:
      tags:
        - Products
      description: Create or update a product
      operationId: upsertProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
              required:
                - name
                - imageUrl
                - description
                - price
                - stock
                - categoryId
                - supplierId
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    description: response code
                  message:
                    type: string
                    description: message from server
                  data:
                    type: object
                    properties:
                      id:
                        type: integer
                        format: int32
                        description: id of product

  /products/get:
    post:
      tags:
        - Products
      description: Get information about products
      operationId: getProducts
      requestBody: 
        content: 
          application/json:
            schema: 
              type: object
              properties: 
                ids:
                  type: array
                  items: 
                    type: integer
                    format: int32
                  description: list of product ids
                name:
                  type: string
                  description: name of product
                categoryId:
                  type: integer
                  format: int32
                  description: id of category
                supplierId:
                  type: integer
                  format: int32
                  description: id of supplier
                order:
                  type: string
                  enum:
                    - asc
                    - desc
                  default: asc
                  description: sort order
                orderBy:
                  type: string
                  enum:
                    - name
                    - price
                    - stock
                    - categoryId
                    - supplierId
                  default: null
                  description: field to sort
                page:
                  type: number
                  description: page number for pagination
                pageSize:
                  type: number
                  description: number of items per page
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    description: response code
                  message:
                    type: string
                    description: message from server
                  data:
                    type: object
                    properties:
                      products:
                        type: array
                        items:
                          $ref: "#/components/schemas/Product"
                      page:
                        type: number
                        description: page number for pagination
                      pageSize:
                        type: number
                        description: number of items per page

  /products/{productId}:
    delete:
      tags:
        - Products
      description: Soft delete a product
      operationId: deleteProduct
      parameters:
        - name: productId
          in: path
          description: productId to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: "Successful response"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: number
                    description: response code
                  message:
                    type: string
                    description: message from server

components:
  schemas:
    Supplier:
      type: object
      properties:
        id:
          type: number
          description: id of supplier
        name:
          type: string
          description: name of supplier
        phoneNumber:
          type: string
          description: phoneNumber of supplier
        email:
          type: string
          description: email of supplier
        address:
          type: string
          description: address of supplier
    Category:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: id of category
        name:
          type: string
          description: name of category
        description:
          type: string
          description: description of category
    Product:
      type: object
      properties:
        id:
          type: integer
          format: int32
          description: id of category
        name:
          type: string
          description: name of product
        imageUrl:
          type: string
          description: imageUrl of product
        description:
          type: string
          description: description of product
        price:
          type: integer
          format: int32
          description: price of product in VND
        stock:
          type: integer
          format: int32
          description: stock of product
        categoryId:
          type: integer
          format: int32
          description: id of category
        supplierId:
          type: integer
          format: int32
          description: id of supplier